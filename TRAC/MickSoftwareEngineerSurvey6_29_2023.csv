"Name","Updated","Type","Version","Section","Category","Competency ID","Competency","Rating","Rating Text","Comment"
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Knowledge","Q1","Understands potential attack vectors within applications.","1","Is aware of some common attacks from OWASP such as XSS, CSRF, and SQL injection and how they may be used to take advantage of an application.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Skill","Q2","Writes code that protects against potential attack vectors.","1","Can use a library to protect against common attacks from OWASP such as XSS, CSRF, and SQL injection.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Behavior","Q3","Analyzes the team's applications attack surface and potential vulnerabilities.","1","Reviews new code written by themselves or others and evaluates how it may be vulnerable to attacks from OWASP.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Skill","Q4","Understands the monitoring metrics and tools used by the company and how to integrate with them (e.g. logs, usage, system, security).","1","Is aware of core services, their purpose, and which tools to integrate with, but needs guidance to integrate with their application.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Skill","Q5","Profiles an application to identify and implement performance enhancements.","1","Can connect a profiler to their application and understands its output to identify inefficient codeblocks.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Knowledge","Q6","Understands different metrics of application health and performance.","1","Understands at a high level the signals of application health and performance and the factors that impact them.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Behavior","Q7","Follows established development standards (security, performance, testing, coding style).","2","Follows company standards and understands the importance of adhering to them. Actively seeks out senior developers if unsure on best practices and when no clear company guidelines are available.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Behavior","Q8","Analyzes the team's applications and fixes errors.","2","Makes fixing bugs a priority and actively works on drawing attention to them during planning. Can quickly identify and fix bugs even in code written by others.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Skill","Q9","Identifies, explains, and resolves software issues.","2","Quickly resolves and fixes issues of all types within the team's applications. Works well with QA to explain bugs and help troubleshoot as well as quickly promoting changes back to be able to be tested. Completes features reliably and needs minimal back and forth with QA before their tasks are accepted and certified.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Quality and Health","Skill","Q10","Writes code that fails gracefully and handles error conditions (e.g. service failures, logging).","2","Can write robust code that defends against common error scenarios such as bad responses from services and log the appropriate information to allow quick and efficient troubleshooting. Understands the severity of different types of errors and when they should be suppressed or surfaced to the user.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Programming Concepts","Skill","C1","Writes maintainable and modular code.","3","Has written large-scale applications or libraries while maintaining solid software architecture using best practices. Writes thoughtful code that takes users into account and considers readability and comprehension a priority (principle of least surprise).",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Programming Concepts","Knowledge","C2","Understands common development principles (e.g. DRY, KISS, YAGNI).","2","Has a complete understanding of several software development philosophies, and has experience using them in practice - including when ignoring them caused issues or made development more difficult.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Programming Concepts","Knowledge","C3","Understands object-oriented programming paradigms and patterns.","2","Understands OOP and more advanced topics such as domain driven design, composition, and the law of demeter. Familiar with SOLID, GRASP, and many other design patterns such as factories, repositories, facades, decorators, etc and has used them when developing.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Programming Concepts","Knowledge","C4","Understands functional programming paradigms and patterns.","1","Understands FP basics such as first-class functions, higher-order functions, closures, immutability, and statelessness.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Programming Concepts","Knowledge","C5","Understands different methods of encryption (e.g. symmetric, asymmetric, authenticated).","1","Understands at a high level the different methods of encryption and how we use them at QL.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T1","Understands the various types of testing and their importance (e.g. unit, functional, acceptance, user).","2","Understands the value of multiple types of test suites for an application or software and the different scenarios they help protect against. Knows how to write most types of tests for their team's projects.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Behavior","T2","Writes comprehensive tests for all code.","1","Proactively writes unit tests or acceptance tests for their projects.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Skill","T3","Performs VCS management such as committing, merging, handling conflicts.","3","Understands the meaning behind VCS commands and how they work. Comfortable with console or CLI. Can handle conflict resolution for any situation and recovering data when something goes wrong. Often helps others when they have a vcs-related issue.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T4","Understands best practices for multi-person or team workflows and branch/merging strategies.","3","Has experience with multiple workflows and how they work with different team sizes. Understands the trade-offs with different development strategies and how to balance between the needs of development teams and business partners for change management. Considered an expert in this domain and helps many teams across the company improve their processes and learn optimal development and vcs processes.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T5","Understands requirements and process for compiling and building applications in their domain.","2","Has an in-depth understanding of the processes run in order to build and compile their team's projects including system requirements and dependencies. Has experience with writing scripts for automating the build process and is keenly aware of the differences between compiling on a dev machine and for deployment. Aware of specific QL processes or caveats for our enterprise environment including consideration of our staging environments and network conditions. Can quickly debug issues that arise anywhere in the toolchain.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T6","Understands requirements and process for deploying applications in their domain.","2","Has an in-depth understanding of the processes run in order to deploy their team's projects to multiple environments - including both on-premises and cloud. Aware of specific QL processes or caveats for our enterprise environment including consideration of our staging environments and network conditions. Can quickly debug issues that arise anywhere in the process.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T7","Understands the release management pipeline and how to set up for applications in their domain.","2","Knows the entire software development process and SDLC from task intake to production deployment including requirements gathering, testing and promotion through environments. Helps define the standards and processes that the team follows for release management.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Tooling","Knowledge","T8","Understands the implications of changing or updating dependencies.","2","Understands the implications of using third party code and evaluates when to use them based on security, reliability, and community support. Knows how to use native package managers for their team's applications such as nuget, composer, npm, hex, and others. Has knowledge of vendoring, locked dependencies or shrinkwrapping, and verifying trust such as signing code and authorship.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Knowledge","I1","Understands the value of frameworks/libraries and how to use them effectively.","2","Digs deeply into framework and library documentation or code and knows the frameworks and libraries used by the team's applications in great detail.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Knowledge","I2","Understands how to properly implement authentication and authorization.","2","Has experience with implementing both authorization and authentication for their team's applications. Understands the security requirements and concerns for gating access to sensitive data and follows best practices both from QL and the industry.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Behavior","I3","Creates and publishes reusable libraries or modules.","1","Has contributed to a library or module used by multiple projects - including those outside of their own team.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Behavior","I4","Evangelizes and exhibits open-source mindset.","2","Understands the benefits QL receives from open-source and value of contributing back to the industry. Encourages collaboration through code reviews, knowledge share, and open collaboration on software projects.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Knowledge","I5","Understands inter-system communication protocols (e.g. REST, SOAP, RPC, Queues).","2","Can build a service used by other services or systems using best practices and industry-standard protocols. Understands the value of following standards in designing public APIs.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Behavior","I6","Respects how code changes may affect downstream consumers.","2","Understands best practices for inter-system communication and building public APIs. Minimizes breaking changes and has respect for users and consumers of their services or libraries.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Integration","Behavior","I7","Helps design and encourage community standards (e.g. performance, testing, coding style).","2","Understands the value of common standards and guides discussions and driving consensus among their team or multiple teams.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Full Stack","Skill","F1","Writes different types of applications (e.g. console, web, API, native, embedded).","2","Can make significant contributions that follow company standards and NFRs to systems from multiple categories of application.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Full Stack","Knowledge","F2","Knowledgeable of multiple data management systems and when they are most effective.","2","Has great knowledge of at least one database system and used it extensively. Is familiar with other types of database systems. Has experience managing databases such as defining schema and writing queries, migrations, and backups.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Full Stack","Skill","F3","Can set up a complete local environment for a system (e.g. IDE, runtime, web servers, database).","2","Can set up development environment for all layers of the team's applications with minimal or no oversight.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Full Stack","Knowledge","F4","Understands underlying operating system and how to integrate and configure runtime for application code.","0","Has experience using the command line for the OS used by the team.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Full Stack","Skill","F5","Can make changes to all levels of the team's projects (e.g. client-side, frontend, backend, database).","2","Can make changes to all layers of the team's applications and actively improves their knowledge and familiarity with all components of the team's systems.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Vision and Growth","Skill","V1","Learns new libraries and how to use them effectively.","2","Can implement a new library or framework in a safe and maintainable manner. Knows where to find high quality libraries and when to use them in the enterprise.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Vision and Growth","Behavior","V2","Avoids writing code unnecessarily by using existing internal or open source solutions.","2","Seeks out new libraries and technologies in their application space and how they make their applications better. Implements third party libraries when a high quality option exists and knows when it is valuable to write their own implementation that meets the needs of QL.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Vision and Growth","Skill","V3","Learns new languages or systems and knows when it is appropriate to introduce them.","2","Demonstrates curiosity and interest in learning new technology and applying it to QL to make themselves and others more efficient or produce higher quality software. Works with architects to investigate new technology or products when introduced into the company or the team's applications.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Vision and Growth","Behavior","V4","Is actively involved with development communities (e.g. giving talks, helping others).","1","Participates in IT communities and actively involved in developing standards and best practices across teams and applications.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Vision and Growth","Behavior","V5","Stays current on new and upcoming technologies.","2","Shows active interest and curiosity in new initiatives and services or systems within QL. Stays up to date on new libraries or technology in their domain. Knows about upcoming changes or versions of libraries or frameworks used by the team and shares that knowledge with others.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Behavior","A1","Designs extensible and composable systems (e.g. services, APIs, modules).","2","Significant contributor to a composable software system and writes decoupled code to avoid service and vendor lock-in. Thinks ahead and considers long-term vision of their applications to minimize technical debt and increase velocity of delivery to stakeholders.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A2","Understands how their team's applications integrate with external systems.","1","Understands the dependencies such as services and databases of their team's applications and how they communicate with them.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A3","Understands system architectural patterns and when to use them effectively.","0","May be familiar with common architectural patterns but has no hands-on experience with them.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A4","Understands the flow of data used by their team's systems.","2","Has in-depth knowledge of methods of safeguarding data and follows best practices with regards to encryption and security. Understands the requirements and best practices for protecting data both internal and externally-accessible as well as at-rest and in-flight. Follows NFRs for data management.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Behavior","A5","Addresses current and prevents future technical debt.","2","Writes well-thought out code that has minimal negative impact to the long-term technical wellbeing of the project. Evaluates their own code for technical debt and seeks thoughts and advice from others in the form of legitimate code reviews and design sessions. Identifies technical debt within their team's application. Frequently tackles technical debt during iterations.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Skill","A6","Can effectively explain architectural decisions to technical and non-technical partners.","1","Can explain their technical decisions and implementations to other engineers and clarify software concepts to non-engineer members of their team.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Behavior","A7","Writes effective documentation both in and outside of code (e.g. comments, changelog, architecture, system design, gliffies).","2","Writes technical and non-technical documentation both in code and outside of code such as system references, project decisions and architecture. Keeps documentation up-to-date to ensure correctness and clarity.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A8","Has expert knowledge in a specialized domain.","2","Actively pursues their interest as a specialist in one or more significant business-impacting domains. Shows consistent progress and growth with their experience and knowledge.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A9","Understands how to create scalable software.","2","Has in-depth knowledge of design patterns to improve scalability such as statelessness, caching, lazy loading, asynchronous processing and uses them in their software designs and implementations. Works with Ops to improve handling of availability, backups, monitoring, logging, and documentation.",""
"MickSESurvey2023","2023-06-29","Software Engineering","2.0.0","Architecture","Knowledge","A10","Understands how to create and manage distributed software and systems.","2","Has experience with setup, administration, and use of distributed systems such as distributed databases, clustered services, or peer-to-peer applications.",""